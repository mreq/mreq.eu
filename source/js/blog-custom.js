// Generated by CoffeeScript 1.6.2
(function() {
  var initLightbox, initSearch;

  initLightbox = function() {
    var imgs, wrap;

    wrap = $('#m-col');
    imgs = wrap.find('a > img');
    imgs.each(function() {
      var t;

      t = $(this);
      return t.parent('a').attr('title', t.attr('alt'));
    });
    return imgs.parent('a').magnificPopup({
      type: 'image',
      gallery: {
        enabled: true,
        preload: [0, 2]
      }
    });
  };

  initSearch = function() {
    var Article, Articles, articleEls, articles, change, handleHash, init, initFun, input, wrap;

    wrap = $('.m-article-list');
    if (wrap.length) {
      input = $('#m-search-input');
      Article = Backbone.Model.extend({
        doesMatch: function(val) {
          return this.get('text').indexOf(val) !== -1;
        }
      });
      Articles = Backbone.Collection.extend({
        model: Article
      });
      articles = new Articles;
      articleEls = wrap.children('article');
      initFun = function() {
        if (!articles.length) {
          return articleEls.each(function() {
            var t, tags;

            t = $(this);
            tags = _.map(t.find('.m-article-tags a'), function(el) {
              return $(el).text();
            });
            return articles.add({
              text: ("" + (t.find('h1, h2').text()) + " " + (tags.join(','))).replace(/[\n\r]/g, ' ').replace(/\s\s/g, ' ').toLowerCase(),
              el: t
            });
          });
        }
      };
      init = _.once(initFun);
      change = function() {
        var val;

        val = input.val().toLowerCase();
        window.location.hash = val;
        if (val === '') {
          return articleEls.removeClass('hide');
        } else {
          return articles.each(function(a) {
            return a.get('el').toggleClass('hide', !a.doesMatch(val));
          });
        }
      };
      input.one('focus', init);
      input.on({
        keyup: change,
        change: change
      });
      handleHash = function(tag) {
        init();
        if (tag == null) {
          if (window.location.hash) {
            tag = window.location.hash.split('#').pop();
          }
        }
        if (tag != null) {
          input.val(tag);
          return change();
        }
      };
      handleHash();
      wrap.on('click', '.m-article-tags .m-article-tag-link', function() {
        return handleHash($(this).data('tag'));
      });
      return $('#m-header').on('click', '.m-tag-name', function() {
        return handleHash($(this).data('tag'));
      });
    }
  };

  $(function() {
    initLightbox();
    return initSearch();
  });

}).call(this);
